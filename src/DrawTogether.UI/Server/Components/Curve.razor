@using DrawTogether.UI.Shared
<path d="@PathData(_points)" fill="None" stroke="@Stroke" stroke-width="@StrokeWidth"></path>

@code {
    private Point[] _points { get; set; } = new Point[0];

    [Parameter] public List<Point> Points { get; set; } = new();

    [Parameter] public int StrokeWidth { get; set; } = 8;

    [Parameter] public string Stroke { get; set; } = "#ff0000";

    protected override bool ShouldRender()
    {
        if (_points.Length != Points.Count)
        {
            _points = Points.ToArray();
            return true;
        }

        return false;
    }

    protected static string PathData(Point[] Points)
    {
        // Parameter for smoothness of path in interval [0, 0.5]
        var smoothness = 1.0 / 3.0;

        var result = "";
        if (Points.Length >= 2)
        {
            result = $"M {Points[0].X} {Points[0].Y} ";
            for (var i = 1; i < Points.Length - 1; i++)
            {
                result += $"S {Points[i - 1].X * smoothness / 2 + Points[i].X - Points[i + 1].X * smoothness / 2} {Points[i - 1].Y * smoothness / 2 + Points[i].Y - Points[i + 1].Y * smoothness / 2} {Points[i].X} {Points[i].Y} ";
            }

            result += $"S {Points[^2].X * smoothness + Points[^1].X * (1 - smoothness)} {Points[^2].Y * smoothness + Points[^1].Y * (1 - smoothness)} {Points[^1].X} {Points[^1].Y} ";
        }

        return result;
    }

}